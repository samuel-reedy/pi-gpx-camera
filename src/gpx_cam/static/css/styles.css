/* css/styles.css */

html, body {
    height: 100%;
    margin: 0;
    padding: 0;
    background-color: rgb(33, 98, 172);
    overflow: hidden; /* Prevent scroll bars */
}

#streamStage {
    display: flex; /* Enables flexbox layout */
    flex-direction: column; /* Stacks children vertically */
    height: 100vh; /* Makes the container fill the viewport height */
}

#video-container {
    flex: 1; 
    padding: 20px;
    object-fit: contain;
    position: relative;
}

#stream, #canvas {
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    object-fit: contain; /* Ensures content fits within the dimensions without distortion */
}



.bar {
    display: flex;
    justify-content: space-between;
    align-items: center;
    width: 100%;
    background-color: rgb(25, 78, 139);
    box-sizing: border-box;
    height: 10%;
    padding: 10px;
    min-height: 30px;
    max-height: 60px;
}

/* Specific styles for top bar */
#topBar {
    top: 0;
    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.5); /* Add drop shadow */
}

/* Specific styles for bottom bar */
#bottomBar {
    bottom: 0;
    box-shadow: 0px -4px 8px rgba(0, 0, 0, 0.5); /* Add bigger drop shadow */
}

#latLon {
    color: rgb(255, 208, 1);
    font-family: Arial, sans-serif;
    font-weight: bold;
    overflow: hidden; /* Hide any overflow content */
    text-overflow: ellipsis; /* Add ellipsis for overflow text */
    white-space: nowrap; /* Prevent text from wrapping */
    font-size: 90%; /* Make the font 50% smaller */
}

#controls {
    display: flex;
    justify-content: center;
    gap: 10px;
    background-color: rgba(0, 0, 0, 0.124);
    border-radius: 10px;
    padding: 5px;
}

#controlText {
    color: white; /* Text color */
    display: flex; /* Aligns items in a row */
    align-items: center; /* Centers items vertically */
    gap: 10px; /* Adds space between the label and the spinner */
    font-family: Arial, sans-serif; /* Match font */
}

.controlSpinner {
    min-height: 20px;
    color: black;  /* Text color */
    font-weight: bold;  /* Bold text */
    border: none;
    border-radius: 5px; /* Add border radius to create rounded corners */
    padding-left: 10px; /* Add padding to the left side of the text */
}

#recordButton {
    background-color: green;
    color: white;
    font-family: Arial, sans-serif;
    font-weight: bold;
    border: none;
    cursor: pointer;
    white-space: nowrap; /* Prevent text wrapping */
    border-radius: 5px; /* Add border radius to create rounded corners */
}

.pageButton{
    background-color: rgb(33, 33, 33);
    color: white;
    font-family: Arial, sans-serif;
    font-weight: bold;
    border: none;
    cursor: pointer;
    white-space: nowrap; /* Prevent text wrapping */
    border-radius: 5px; /* Add border radius to create rounded corners */
}

#videoFile{ 
    min-height: 20px;
    color: black;  /* Text color */
    font-weight: bold;  /* Bold text */
    border: none;
    border-radius: 5px; /* Add border radius to create rounded corners */
}

#statusText {
    color: #ffff00;
    font-family: Arial, sans-serif;
    font-weight: bold;
    white-space: normal; /* Add this line to prevent line breaks */
    overflow: visible; /* Add this line to hide overflowing text */
}

#canvas-container {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}

/* Position the SVG gauges absolutely within the canvas container */
#depth-gauge {
    position: relative;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none; /* Allow clicks to pass through to the canvas */
    z-index: 1;
    
}

.gauge {
    fill: none;
    stroke-width: 5;
}

#ideal-depth {
    stroke: rgb(255, 255, 255, 0.75);
    stroke-dasharray: 5px; /* Add dashed stroke */
}

#current-depth {
    stroke: rgb(0, 255, 0, 0.75);
}

#recordingStatus {
    color: #ff0000;
    font-family: Arial, sans-serif;
    font-weight: bold;
    white-space: normal; /* Add this line to prevent line breaks */
    overflow: visible; /* Add this line to hide overflowing text */
}
